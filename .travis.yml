language: android

notifications:
  email: true

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - platform-tools
    # - tools

    # The BuildTools version used by your project
    - build-tools-20.0.0

    # The SDK version used to compile your project
    - android-20

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - extra-android-support
    - addon-google_apis-google-19

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-19
    - sys-img-x86-android-17
    - sys-img-armeabi-v7a-android-wear-20
    - sys-img-armeabi-v7a-android-18
    - sys-img-armeabi-v7a-android-16

install:
  - chmod +x scripts/clone_sub_repo.sh
  - bash scripts/clone_sub_repo.sh
  
  # update android sdk
  - android list sdk -a -e

  # setup of appcompat library
  #- cp -r ${ANDROID_HOME}/extras/android/support/v7/appcompat ..
  #- android update lib-project -p ../appcompat --target android-18

  # setup of google play services library
  #- cp -r ${ANDROID_HOME}/extras/google/google_play_services/libproject/google-play-services_lib ..
  #- android update lib-project -p ../google-play-services_lib --target android-18

  # setup main and testproject
  #- android update lib-project -p androidutils-lib --target android-18
  #- android update test-project -p androidutils-tests -m androidutils-lib

  # create and start emulator
  - echo no | android create avd --force -n test -t android-19 --abi armeabi-v7a -c 25M
  - emulator -avd test -no-skin -no-audio -no-window &
  
before_script:
  # wait for emulator to make sure it's started before tests are run
  - chmod +x wait_for_emulator.sh
  - bash wait_for_emulator.sh

script:
  - chmod +x gradlew
  - TERM=dumb ./gradlew connectedCheck
  #- ant clean emma instrument
  #- adb install bin/test-instrumented.apk
  #- adb shell am instrument -e coverage true -w se.springworks.android.utils.test/android.test.InstrumentationTestRunner
  #- adb pull /data/data/se.springworks.android.utils.test/files/coverage.ec .
  #- java -cp $ANDROID_HOME/tools/lib/emma.jar emma report -r html -in bin/coverage.em,coverage.ec -sp ../androidutils-lib/src/
  #- java -cp tools/emmacoveralls.jar emma report -r coveralls -in bin/coverage.em,coverage.ec -sp ../androidutils-lib/src/ -Dreport.coveralls.service.jobid=${TRAVIS_JOB_ID} -Dreport.coveralls.service.name=travis-ci -Dreport.coveralls.repotoken=sNret2NmV3tPLLDumzGWGWPD8FRwiIu58
  #- curl --form json_file=@coverage.json https://coveralls.io/api/v1/jobs
