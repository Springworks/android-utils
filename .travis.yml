language: java

jdk: oraclejdk7

notifications:
  email: true

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq libstdc++6:i386 lib32z1
  - wget http://dl.google.com/android/android-sdk_r22.2.1-linux.tgz
  - tar -zxf android-sdk_r22.2.1-linux.tgz
  - export ANDROID_HOME=$TRAVIS_BUILD_DIR/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools
  - export PATH=${PATH}:${ANDROID_HOME}/platform-tools

install:
  # update android sdk
  - echo y | android update sdk --filter android-18,android-16,android-14,android-10,android-8 --no-ui -a
  - echo y | android update sdk --filter platform-tools,build-tools-19.0.0 --no-ui -a
  - echo y | android update sdk --filter sysimg-18 --no-ui -a
  - echo y | android update sdk --filter extra-android-support --no-ui -a
  - echo y | android update sdk --filter extra-google-google_play_services --no-ui -a

  # setup of appcompat library
  - cp -r $ANDROID_HOME/extras/android/support/v7/appcompat ..
  - android update lib-project -p ../appcompat --target android-18

  # setup of google play services library
  - cp -r $ANDROID_HOME/extras/google/google_play_services/libproject/google-play-services_lib ..
  - android update lib-project -p ../google-play-services_lib --target android-18

  # setup main and testproject
  - android update lib-project -p androidutils-lib --target android-18
  - android update test-project -p androidutils-tests -m androidutils-lib

  # create and start emulator
  - echo no | android create avd --force -n test -t android-18 --abi armeabi-v7a
  - emulator -avd test -no-skin -no-audio -no-window &

before_script:
  # wait for emulator to make sure it's started before tests are run
  - chmod +x wait_for_emulator.sh
  - bash wait_for_emulator.sh

script:
  - cd androidutils-tests
  - ant clean emma instrument
  - adb install bin/test-instrumented.apk
  - adb shell am instrument -e coverage true -w se.springworks.android.utils.test/android.test.InstrumentationTestRunner
  - adb pull /data/data/se.springworks.android.utils.test/files/coverage.ec .
  - java -cp $ANDROID_HOME/tools/lib/emma.jar emma report -r html -in bin/coverage.em,coverage.ec -sp ../androidutils-lib/src/